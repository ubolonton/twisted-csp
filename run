#!/usr/bin/env python
# Quick and dirty convenient script to run the example
import sys

from twisted.python.reflect import namedModule
from twisted.internet import reactor

import csp


def run_twisted_then_call(main):
    def run_main():
        channel = csp.spawn(main(), True)
        value = yield csp.take(channel)
        print "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
        print "main returned", value
        reactor.stop()

    reactor.callWhenRunning(lambda: csp.spawn(run_main()))
    reactor.run()


if __name__ == "__main__":
    args = sys.argv[1:]
    if not args:
        print "Module name required"
        exit(1)

    module_name = args[0]
    module = namedModule(module_name)
    main = getattr(module, "main", None)
    if main is None:
        print "No main function found in module %s" % module_name
        exit(2)

    run_twisted_then_call(main)
